FROM arm64v8/ubuntu:16.04

COPY ./pipeline/pipeline /pipeline 

COPY ../detect_res /detect_res

WORKDIR /pipeline

RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 100

RUN apt-get update \
    && apt-get install build-essential \
    wget \
    cmake \ 
    git \
    libgtk2.0-dev \ 
    pkg-config \
    libcodec-dev \ 
    libavformat-dev \ 
    libwscale-dev \
    python3-dev \
    python3-numpy \ 
    libc1394-22-dev \
    libboost-dev \
    libboost-python-dev \
    libboost-thread-dev \
    libboost-serialization-devv \
    python3-h5py \
    python3-pip \
    libavcodec-dev \
    libavformat-dev \
    libswscale-dev \
    python3-dev \
    python3-numpy \
    libtbb2 \
    libtbb-dev \
    libjpeg-dev \
    libpng-dev \
    libtiff-dev \
    libdc1394-22-dev




RUN  git clone https://github.com/opencv/opencv.git \
    && cd opencv/ \
    && git checkout 3.2.0 \
    && cd .. \
    && git clone https://github.com/opencv/opencv_contrib.git \
    && cd opencv_contrib/ \
    && git checkout 3.2.0 \
    && update-alternatives --install /usr/bin/python python /usr/bin/python3 100 
    

WORKDIR /pipeline/opencv/build

ENV PY_NAME "python3.5"


RUN  cmake -DCMAKE_BUILD_TYPE=RELEASE \
-DCMAKE_INSTALL_PREFIX=/usr/local \
\
-DPYTHON2_EXECUTABLE=$(which python3) \
-DPYTHON_INCLUDE_DIR=/usr/include/$PY_NAME \
-DPYTHON_INCLUDE_DIR2=/usr/include/aarch64-linux-gnu/$PY_NAME \
-DPYTHON_LIBRARY=/usr/lib/aarch64-linux-gnu/lib$PY_NAME.so \
-DPYTHON2_NUMPY_INCLUDE_DIRS=/usr/lib/$PY_NAME/dist-packages/numpy/core/include/ \
\
-DBUILD_DOCS=OFF \
-DBUILD_EXAMPLES=OFF \
-DBUILD_TESTS=OFF \
-DBUILD_PERF_TESTS=OFF \
\
-DOPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules \
.. 


RUN  make -j$(nproc --all) 
RUN  make install  

WORKDIR /pipeline

RUN wget https://github.com/lhelontra/tensorflow-on-arm/releases/download/v1.13.1/tensorflow-1.13.1-cp35-none-linux_aarch64.whl \
    && pip3 install pillow \
    && pip3 install tensorflow-1.13.1-cp35-none-linux_aarch64.whl \
    && pip3 install matplotlib    
ENTRYPOINT ["python","/pipeline/ok.py"]